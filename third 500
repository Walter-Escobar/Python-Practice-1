'''from struct import *
data = pack("iif", 1, 2, 5)
print(data)
print(unpack('iif', b'\x26\x00\x00\x00\x02\x00\x00\x00\x00\x00\xa0@'))'''
'''vowels =['a','e','i','o','u']
sent = list(input())
for i in range(len(sent)):
    if any(vowels) == sent[i]:
     print("y")
    else:
     print("no")
print(sent)
print(vowels)'''


# FIX THIS


'''n = int(input())
i = 0
for i in range(n):
    a = int(input())
    b = int(input())
    print(a/b)
    except ValueError:
        print("enter numbers only")
    except ZeroDivisionError:
        print("AUR KYA EXPRESSIONS DU ISKO??")

'''

'''from tkinter import *

class miClass:
    def __init__(self, master):
        frame = Frame(master)
        frame.pack()

        self.printButton = Button(frame, text="print message", command=self.printMessage)
        #self.printButton.pack(side=LEFT)
        self.printButton.grid(row = 0, column = 1, sticky = E)

        self.quitButton = Button(frame, text="Quit", command=frame.quit)

        self.quitButton.grid(row = 4, column = 1, sticky = E)

    def printMessage(self):
        print("Ye kaam karta hai...")

root = Tk()
b = miClass(root)
root.mainloop()
'''
'''from tkinter import *

def kuchNahi():
    print("kuch nahi")

root = Tk()

menu = Menu(root)
root.config(menu=menu)

subMenu = Menu(menu)
menu.add_cascade(label= "pehla", menu=subMenu)
subMenu.add_command(label= "first", command =kuchNahi())
subMenu.add_command(label= "firpehla", command =kuchNahi())
subMenu.add_separator()



root.mainloop()
'''
'''stud = { 'a' : 1531 , 'b' : 513, 'c' : 10357, 'k':['math', 'compsci']}
var = (stud.get('k'))

var[0] = 'dingy dongy'
print(var[0])
var = stud.pop('c')
print(stud)


print(var)

'''

#HACKERRANK

'''
import collections
c = collections.Counter(sorted(input()))

for letter in c.most_common(3):
    print(str(letter).strip("()\'\' \' \, ").replace(",","").replace("'",""))
    '''
'''plt.plot([1,2,3,4])
plt.ylabel('some numbers')
plt.show()'''

'''def fibo(i):
    start = time.time( )
    x = []
    y = []

    k = 0
    r = 1
    while k < i:
        if r <= 1:
            print(r)
            x.append(r)
            #y.append(k)
            r += 1
        else:
            print(r)
            r = int(r + (r - 1))
            x.append(r)
            #y.append(k)
        k += 1
    plt.plot(x)
    plt.show()
fibo(10)'''
'''import time
lst = []
i = 0
k = int(input())
for i in range(k):
    lst.append(k)
    k += 1
    i += 1
# itr - 1
start = time.time()
print(max(lst))
end = time.time()
print(end - start)

# itr - 2
start1 = time.time()
p = len(lst)
k = 0
for k in range(p):
    if lst[k] > any(lst):
        print(lst[k])
    else:
        k += 1
end1 = time.time()
print(end1 - start1)
'''
'''
n = list(input("First : "))
m = list(input("Second : "))
i = 0
p = 0
if len(n) == len(m):

   for i in range(len(n)):

       if n[i] in m:
           i += 1
           if i == len(n):
               print('Anagram')
           #else:
            #   print("Not anagrams")

else:
    print("Not anagrams")
'''
#PROJECT EULER 1
'''i = 0
lst = []
lst2 = []
for i in range(1000):
    if i%3 is 0:
       lst.append(i)
    else:
        continue
for i in range(1000):
    if i%5 is 0:
        lst2.append(i)
    else:
        continue
for i in range(len(lst2)):
    if lst2[i] in lst:
        lst.remove(lst2[i])
    else:
        continue
print(sorted(lst + lst2))
print(sum(lst + lst2))
'''
'''
# 4 mil below fibo even number sum

x = []
k = 0

r = 1
while k < 32:
    if r <= 1:
        x.append(r)
        r += 1
    else:
        x.append(r)
        r = int(r + x[k-1])  
    k += 1
i = 0
print(x)
print(len(x))
lst = []
for i in x:
    if i % 2== 0:
        lst.append(i)

print(sum(lst))

'''
'''#MATPLOTLIB STUFF
from matplotlib import pyplot as plt

r = [1, 3, 5, 9, 17, 33, 65, 129, 257, 513, 1025, 2049, 4097, 8193, 16385, 32769, 65537, 131073, 262145, 524289, 1048577, 2097153, 4194305, 8388609, 16777217, 33554433, 67108865, 134217729, 268435457, 536870913, 1073741825, 2147483649, 4294967297, 8589934593, 17179869185, 34359738369, 68719476737, 137438953473, 274877906945, 549755813889, 1099511627777, 2199023255553, 4398046511105, 8796093022209, 17592186044417, 35184372088833, 70368744177665, 140737488355329, 281474976710657, 562949953421313, 1125899906842625, 2251799813685249, 4503599627370497, 9007199254740993, 18014398509481985, 36028797018963969, 72057594037927937, 144115188075855873, 288230376151711745, 576460752303423489, 1152921504606846977, 2305843009213693953, 4611686018427387905, 9223372036854775809, 18446744073709551617, 36893488147419103233, 73786976294838206465, 147573952589676412929, 295147905179352825857, 590295810358705651713, 1180591620717411303425, 2361183241434822606849, 4722366482869645213697, 9444732965739290427393, 18889465931478580854785, 37778931862957161709569, 75557863725914323419137, 151115727451828646838273, 302231454903657293676545, 604462909807314587353089, 1208925819614629174706177, 2417851639229258349412353, 4835703278458516698824705, 9671406556917033397649409, 19342813113834066795298817, 38685626227668133590597633, 77371252455336267181195265, 154742504910672534362390529, 309485009821345068724781057, 618970019642690137449562113, 1237940039285380274899124225, 2475880078570760549798248449, 4951760157141521099596496897, 9903520314283042199192993793, 19807040628566084398385987585, 39614081257132168796771975169, 79228162514264337593543950337, 158456325028528675187087900673, 316912650057057350374175801345, 633825300114114700748351602689]
 #FIBOFIBO
n = [i for i in range(len(r))]
#plt.plot(r,n)
plt.title('ginger')
plt.xlabel('fibo')
plt.ylabel('term')
#plt.show()'''
# HACKERRANK MY SOLUTION ( TOO LONG)
'''
i = int(input())

k = 0
lst = []

for k in range(i):
    lst.append(input())
    k += 1
reflst = []
for l in lst:
    if l in reflst:
        continue
    else:
        reflst.append(l)
print(len(reflst))
k = 0
n = []
z = []
for k in range(len(lst)):
    if lst[k] in n:
        continue
    else:
        n.append(lst[k])
k = 0
for k in range(len(n)):
    z.append(lst.count(n[k]))
print(' '.join(str(q) for q in z ))
'''

# PRO SOLUTION USING ORDERED DICTIONARY
'''from collections import Counter, OrderedDict
class OrderedCounter(Counter, OrderedDict):
    pass
d = OrderedCounter(input() for _ in range(int(input())))
print(len(d))
print(*d.values())
'''
