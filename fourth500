# simple hackerrank problem
'''s = list(str(input()))
i = int(input())
r = 0
n = i
for x in range(int(len(s)/i) + int(len(s)%i)):
    print(''.join(s[r:n]))
    r += i
    n += i'''
# fix
'''
i = int(input()) + 1
k = 0
lst = [k for k in range(1,i)]
r = 0
for r in range(i-1):
    l = str(lst[0:r]+lst[r::-1])
    l.strip('[],')
    print(l)'''
'''a = [1, 5, 10, 20, 40, 80]
b = [3, 4, 15, 20, 30, 70, 80, 120]
lst = []
for x in a:
    if x in b:
        lst.append(x)
    else:
        continue
print(lst)'''

'''
#hacktoberfest
'''def fibo():
    a = 0
    b = 1
    _temp = [0, 1]
    n = int(input(" n? :  "))

    while (n):
        c = a + b
        a = b
        b = c
        _temp.append(c)
        n = n - 1

    print(_temp[len(_temp) - 3])

fibo()'''



'''

import numpy as np
import random

#a = np.array([[2,4,5],[1,5,3], [5,2,3]])
#a = np.random.random((4,3))
#print(a)
#print("\n")

#print(a[3::1])

#a = np.array([[1,2,3], [4,5,6], [7,8,9], [10, 11, 12]])
#b = np.array([1,2,2,0])
#print(a[np.arange(4), b])
#bool_idx = (a>3)

#print('\n')
#print(bool_idx)

a = np.array([[1,2,3],[4,5,6],[7,8,9]])
b = np.array([[2,3,4],[5,6,7],[8,9,10]])
print(np.rank(np.dot(a,b)))
'''
'''n = input()
alist = [int(d) for d in str(n)]

def bubbleSort(alist):
    for passnum in range(len(alist)-1,0,-1):
        for i in range(passnum):
            if alist[i]>alist[i+1]:
                temp = alist[i]
                alist[i] = alist[i+1]
                alist[i+1] = temp

bubbleSort(alist)
alist = [str(k) for k in alist]
print(''.join(alist[::-1]))'''

'''def filter_list(l):
 d= []
 for i in range(len(l)):
  if str(l[i]).isalpha() == True:
      if '\'' in list(l[i]):

       continue
  else:
      d.append(l[i])
 print(d)
filter_list([1,'a','b','0',15])
'''
'''import math
i = 0
for i in range(int(input())):

  c = int(input())
  a = 0
  b = 0
  for b in range(c):
   for a in range(1, b):
     k = 0
     c = math.sqrt(a * a + b * b)
     if c % 1 == 0:
         if 0.5*a*b % 6 != 0 and 0.5*a*b % 28 != 0:
             k += 1
             print(k)
             i += 1
     else:
        i += 1'''

'''import random

i = 0
a = []
for i in range(8):
    a.append(int(input()))

b = a
print(b)
o = []
for i in range(100):
    for k in range(6):
        o.append(random.choice(a))
        b = list(set(a)^set(b))
    if sum(o) == 100:
        for k in range(len(o)):
            print(o[k])
        i += 1
    else:
        i += 1'''

from sklearn.metrics import r2_score
from sklearn.datasets import load_iris
from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import cross_val_score
import numpy as np

iris = load_iris()

type(iris)

X = iris.data
y = iris.target

knn = KNeighborsClassifier(n_neighbors= 3)

knn.fit(X, y)

print(knn.predict([[2,3,4,4], [1,1,1,1]]))

print(-1*(r2_score([2,3,2,4], [1,1,1,2])))  # Sasta jugaad XD 
